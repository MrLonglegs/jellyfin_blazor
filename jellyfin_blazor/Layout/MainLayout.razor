@inherits LayoutComponentBase

@using jellyfin_blazor.Identity
@using jellyfin_blazor.Services
@using jellyfin_blazor.Pages
@using jellyfin_blazor.CustomElements

@inject NavigationManager Navigation
@inject IdentityContext IdentityContext
@inject HttpService Http

@if (IdentityContext.Identity == null)
{
	<_AuthStateCheck IsAuthenticated="StateHasChanged" />
	@* This component checks the authentication state and redirects if necessary *@
	@* It will be rendered until the authentication state is determined *@
	@* You can customize this component to show a loading spinner or message *@
}
else
{
	// Render the main layout if the user is authenticated
	<div class="Header" id="top">
		<div style="grid-column: 1; display: flex;">
			<span class="ApplicationLogo" @onclick=@(() => Navigation.NavigateTo("/"))>Jellyfin Blazor</span>
		</div>
		<div style="grid-column: 3;">
			<div class="Misc">
				<span class="Avatar" onclick="" />
			</div>
		</div>
	</div>

	<div style="height: 95vh; display: grid; grid-template-columns: fit-content(100%) auto;">
		@* <div id="Sidebar">
		<div class="NavMenu">
			<span class="Button" @onclick=@(() => Navigation.NavigateTo("/"))>Home</span>
			<span class="Button" @onclick=@(() => Navigation.NavigateTo("/series"))>Series</span>
			<span class="Button" @onclick=@(() => Navigation.NavigateTo("/movies"))>Movies</span>
		</div>
	</div> *@
		<Sidebar>
			<NavMenuItem Content="Home" OnClick=@(() => Navigation.NavigateTo("/")) />
			<NavMenuItem Content="Series" OnClick=@(() => Navigation.NavigateTo("/series")) />
			<NavMenuItem Content="Movies" OnClick=@(() => Navigation.NavigateTo("/movies")) />
		</Sidebar>
		<div style="margin: 10px">
			@Body
		</div>
	</div>
}
<style>
	#Sidebar {
		width: 20vh;
		height: 100%;
		background-color: #3b3b3b;
		color: white;
		border-radius: 0 10px 10px 0;
		display: grid;
		grid-template-rows: fit-content(100%);
		overflow: clip;
	}


		#Sidebar .NavMenu {
			display: grid;
			grid-template-rows: auto;
			text-align: center;
		}

			#Sidebar .NavMenu .Button {
				height: 4vh;
				background-color: transparent;
				border-radius: 1vh;
				border-style: none;
				margin: 0.5vh 1vh;
				box-sizing: border-box;
				align-content: center;
				font-size: 20px;
				font-weight: 200;
				cursor: pointer;
			}

				#Sidebar .NavMenu .Button:hover {
					background-color: #2e2e2e;
				}

	.Header#top {
		display: grid;
		grid-template-columns: 20vh auto fit-content(100%);
		height: 5vh;
		background-color: #2e2e2e;
	}

	.Header .ApplicationLogo {
		font-size: 22px;
		margin: auto;
	}

		.Header .ApplicationLogo:hover {
			cursor: pointer;
		}

	.Header .Misc {
		height: 100%;
		width: 100%;
		display: inline-flex;
		direction: rtl;
		vertical-align: middle;
	}

		.Header .Misc .Avatar {
			height: 3.5vh;
			width: 3.5vh;
			background-color: white;
			margin: auto;
			margin-right: 1vh;
			border-radius: 3.5vh;
		}

			.Header .Misc .Avatar:hover {
				cursor: pointer;
			}
</style>

@functions {
	void ShowAvatarDropdown()
	{

	}
}

@code {

}
