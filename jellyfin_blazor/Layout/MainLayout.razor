@inherits LayoutComponentBase

@using jellyfin_blazor.Identity
@using jellyfin_blazor.Services

@inject NavigationManager Navigation
@inject AuthenticationContext AuthContext
@inject HttpService Http

@{
	if (AuthContext.Identity == null)
	{
		Navigation.NavigateTo($"/_authStateCheck/{@Navigation.ToBaseRelativePath(Navigation.Uri)}", false, true);
	}
}

<div class="Header" id="top">
	<div style="grid-column: 1; display: flex;">
		<span class="ApplicationLogo" @onclick=@(() => Navigation.NavigateTo("/"))>Jellyfin Blazor</span>
	</div>
	<div style="grid-column: 3;">
		<div class="Misc">
			<span class="Box"></span>
		</div>
	</div>
</div>

<div style="height: 95vh; display: grid; grid-template-columns: fit-content(100%) auto;">
	<div id="Sidebar">
		<div class="NavMenu">
			<span class="Button" @onclick=@(() => Navigation.NavigateTo("/series"))>Series</span>
			<span class="Button" @onclick=@(() => Navigation.NavigateTo("/movies"))>Movies</span>
		</div>
	</div>
	<div style="display: grid; grid-template-columns: fit-content(100%)">
		<div style="margin: 10px">
			@Body
		</div>
	</div>
</div>
<style>
	#Sidebar {
		width: 20vh;
		height: 100%;
		background-color: #3b3b3b;
		color: white;
		border-radius: 0 10px 10px 0;
		display: grid;
		grid-template-rows: fit-content(100%);
		overflow: clip;
	}


		#Sidebar .NavMenu {
			display: grid;
			grid-template-rows: repeat(2, 54px);
			text-align: center;
		}

			#Sidebar .NavMenu .Button {
				background-color: transparent;
				border-radius: 10px;
				border-style: none;
				padding: 0px;
				margin: 5px 10px;
				box-sizing: border-box;
				vertical-align: middle;
				align-content: center;
				font-size: 20px;
				font-weight: 200;
				cursor: pointer;
			}

				#Sidebar .NavMenu .Button:hover {
					background-color: #2e2e2e;
				}

	.Header#top {
		display: grid;
		grid-template-columns: 20vh auto auto;
		height: 5vh;
		width: 100vh;
		background-color: #2e2e2e;
	}

	.Header .ApplicationLogo {
		font-size: 22px;
		margin: auto;
	}

		.Header .ApplicationLogo:hover {
			cursor: pointer;
		}

	.Header .Misc {
		display: inline-flex;
		direction: rtl;
		vertical-align: middle;
	}

	.Header .Misc .Box {
		height: 4%;
		width: 4%;
		background-color: red;
	}
</style>

@code {
	protected override async Task OnInitializedAsync()
	{
		if (!(await AuthContext.ReceiveIdentityFromServerAsync()))
		{
			// If the user is not authenticated, navigate to the login page
			Navigation.NavigateTo("/login");
		}
	}
}
