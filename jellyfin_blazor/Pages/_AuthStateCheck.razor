@layout EmptyLayout

@using jellyfin_blazor.Identity
@using jellyfin_blazor.Services
@using jellyfin_blazor.CustomElements

@inject NavigationManager Navigation
@inject HttpService Http;
@inject IdentityContext IdentityContext

@{
	if (isInitialized)
	{
		if (loginFormVisible)
		{
			<LoginForm OnSuccess="@OnLoginSuccess"></LoginForm>
		}
		else if (IdentityContext.Identity != null)
		{
			// If the user is authenticated, invoke the callback
			// to notify the parent component
			IsAuthenticated.InvokeAsync();
		}
	}
}

@code {
	[Parameter]
	public EventCallback IsAuthenticated { get; set; }

	private bool isInitialized = false;
	private bool loginFormVisible = false;

	protected override async Task OnInitializedAsync()
	{
		await IdentityContext.ReceiveIdentityFromServerAsync();
		if (IdentityContext.Identity == null)
		{
			loginFormVisible = true;
		}
		isInitialized = true;
		StateHasChanged();
	}

	private void OnLoginSuccess()
	{
		IsAuthenticated.InvokeAsync();
	}
}
